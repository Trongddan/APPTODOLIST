{"ast":null,"code":"const initialState = {\n  todoList: [{\n    id: 1,\n    name: \"learn Redux\",\n    completed: true,\n    prioriry: 'Medium'\n  }, {\n    id: 2,\n    name: \"learn React\",\n    completed: false,\n    prioriry: 'Low'\n  }]\n};\n\nconst todoListReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'todoList/addTodo':\n      return [...state, action.payload];\n\n    default:\n      return state;\n  }\n};\n\nexport default todoListReducer;","map":{"version":3,"names":["initialState","todoList","id","name","completed","prioriry","todoListReducer","state","action","type","payload"],"sources":["F:/todo-app-redux/src/components/TodoList/todoSlice.js"],"sourcesContent":["const initialState={\r\n    todoList :[\r\n        {id:1, name :\"learn Redux\",completed:true, prioriry:'Medium'},\r\n        {id:2, name :\"learn React\",completed:false, prioriry:'Low'}\r\n    ]\r\n}\r\nconst todoListReducer =(state=initialState, action)=>{\r\n\r\n    switch(action.type){\r\n        case 'todoList/addTodo':\r\n            return [...state,action.payload]\r\n\r\n        default:return state    \r\n\r\n    }\r\n}\r\nexport default todoListReducer"],"mappings":"AAAA,MAAMA,YAAY,GAAC;EACfC,QAAQ,EAAE,CACN;IAACC,EAAE,EAAC,CAAJ;IAAOC,IAAI,EAAE,aAAb;IAA2BC,SAAS,EAAC,IAArC;IAA2CC,QAAQ,EAAC;EAApD,CADM,EAEN;IAACH,EAAE,EAAC,CAAJ;IAAOC,IAAI,EAAE,aAAb;IAA2BC,SAAS,EAAC,KAArC;IAA4CC,QAAQ,EAAC;EAArD,CAFM;AADK,CAAnB;;AAMA,MAAMC,eAAe,GAAE,YAA8B;EAAA,IAA7BC,KAA6B,uEAAvBP,YAAuB;EAAA,IAATQ,MAAS;;EAEjD,QAAOA,MAAM,CAACC,IAAd;IACI,KAAK,kBAAL;MACI,OAAO,CAAC,GAAGF,KAAJ,EAAUC,MAAM,CAACE,OAAjB,CAAP;;IAEJ;MAAQ,OAAOH,KAAP;EAJZ;AAOH,CATD;;AAUA,eAAeD,eAAf"},"metadata":{},"sourceType":"module"}
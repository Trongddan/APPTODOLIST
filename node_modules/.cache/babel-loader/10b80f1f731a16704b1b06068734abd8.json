{"ast":null,"code":"const initialState = [{\n  id: 1,\n  name: \"learn Redux\",\n  completed: true,\n  prioriry: 'Medium'\n}, {\n  id: 2,\n  name: \"learn React\",\n  completed: false,\n  prioriry: 'Low'\n}];\n\nconst todoListReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'todoList/addTodo':\n      return [...state, action.payload];\n\n    case 'tolist/changeStatus':\n    default:\n      return state;\n  }\n};\n\nexport default todoListReducer;","map":{"version":3,"names":["initialState","id","name","completed","prioriry","todoListReducer","state","action","type","payload"],"sources":["F:/todo-app-redux/src/components/TodoList/todoSlice.js"],"sourcesContent":["const initialState=[\r\n        {id:1, name :\"learn Redux\",completed:true, prioriry:'Medium'},\r\n        {id:2, name :\"learn React\",completed:false, prioriry:'Low'}\r\n]\r\nconst todoListReducer =(state=initialState, action)=>{\r\n\r\n    switch(action.type){\r\n        case 'todoList/addTodo':\r\n            return [...state,action.payload]\r\n        case 'tolist/changeStatus':\r\n            \r\n        default:return state  \r\n\r\n    }\r\n}\r\nexport default todoListReducer"],"mappings":"AAAA,MAAMA,YAAY,GAAC,CACX;EAACC,EAAE,EAAC,CAAJ;EAAOC,IAAI,EAAE,aAAb;EAA2BC,SAAS,EAAC,IAArC;EAA2CC,QAAQ,EAAC;AAApD,CADW,EAEX;EAACH,EAAE,EAAC,CAAJ;EAAOC,IAAI,EAAE,aAAb;EAA2BC,SAAS,EAAC,KAArC;EAA4CC,QAAQ,EAAC;AAArD,CAFW,CAAnB;;AAIA,MAAMC,eAAe,GAAE,YAA8B;EAAA,IAA7BC,KAA6B,uEAAvBN,YAAuB;EAAA,IAATO,MAAS;;EAEjD,QAAOA,MAAM,CAACC,IAAd;IACI,KAAK,kBAAL;MACI,OAAO,CAAC,GAAGF,KAAJ,EAAUC,MAAM,CAACE,OAAjB,CAAP;;IACJ,KAAK,qBAAL;IAEA;MAAQ,OAAOH,KAAP;EALZ;AAQH,CAVD;;AAWA,eAAeD,eAAf"},"metadata":{},"sourceType":"module"}